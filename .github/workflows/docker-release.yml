name: Release and Build Docker Image
permissions:
  contents: read

on:
  push:
    tags:
      - "*" # Triggers on tags
  workflow_dispatch: # Allows manual triggering of the workflow
    inputs:
      tag:
        description: "Tag to release"
        required: true
        default: "latest"
  release:
    types: [published]

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    permissions:
      actions: write # required by actions/cache to save new entries
      packages: write # required by docker/build-push-action to push images to GitHub Container Registry

    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@002fdce3c6a235733a90a27c80493a3241e56863 # v2.12.1
        with:
          egress-policy: audit

      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract version from tag
        id: vars
        run: |
          TAG=${GITHUB_REF#refs/tags/}
          echo "tag=${TAG}" >> $GITHUB_OUTPUT

      - name: Cache uv cache
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: ~/.cache/uv
          key: ${{ runner.os }}-uv-${{ hashFiles('pyproject.toml', 'uv.lock') }}
          restore-keys: |
            ${{ runner.os }}-uv-

      - name: Build and push Docker image
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          context: .
          file: ./cpu.Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository }}:${{ steps.vars.outputs.tag }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Image digest
        run: |
          echo "Image built and pushed: ghcr.io/${{ github.repository }}:${{ steps.vars.outputs.tag }}"

  # build-and-push-gpu:
  #   runs-on: ubuntu-latest
  #   needs: build-and-push
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

  #     - name: Set up QEMU
  #       uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

  #     - name: Log in to GitHub Container Registry
  #       uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
  #       with:
  #         registry: ghcr.io
  #         username: ${{ github.actor }}
  #         password: ${{ secrets.GITHUB_TOKEN }}

  #     - name: Extract version from tag
  #       id: vars
  #       run: |
  #         TAG=${GITHUB_REF#refs/tags/}
  #         echo "tag=${TAG}" >> $GITHUB_OUTPUT

  #     - name: Cache uv cache
  #       uses: actions/cache@v4
  #       with:
  #         path: ~/.cache/uv
  #         key: ${{ runner.os }}-uv-${{ hashFiles('pyproject.toml', 'uv.lock') }}
  #         restore-keys: |
  #           ${{ runner.os }}-uv-

  #     - name: Build and push GPU Docker image
  #       uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
  #       with:
  #         context: .
  #         file: ./gpu.Dockerfile
  #         push: true
  #         tags: ghcr.io/${{ github.repository }}-gpu:${{ steps.vars.outputs.tag }}
  #         cache-from: type=gha
  #         cache-to: type=gha,mode=max

  #     - name: Image digest
  #       run: |
  #         echo "GPU Image built and pushed: ghcr.io/${{ github.repository }}-gpu:${{ steps.vars.outputs.tag }}"
